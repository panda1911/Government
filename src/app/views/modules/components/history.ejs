                  <article id="util-history" class="mod-doc">
                    <header>
                        <h1 class="title">util-history:浏览器历史</h1>
                    </header>
                    <div class="content">
                        <section class="overview">
                            <h2 class="cell-title">介绍</h2>
                            <div class="cell-content">
                                jQuery History 通过追踪URL Hash，轻松的追踪页面的状态改变。支持书签，前进或后退按钮，当然，也支持多种浏览器。
                                <ul>
                                    <li>跟踪应用程序的状态改变。状态可以被用户改变，通过URL Hash（URL中，在“#”之后的任何数据）；也可以被你自己改变，通过代码。</li>
                                    <li>可以检测到所有可能的改变页面状态的方式。比如，链接、浏览器的前进或后退按钮、包含Hash的书签、刷新带有URL Hash的页面。</li>
                                    <li>浏览器兼容。IE 6+，FF 2+，Safari 2+,Chrome 1+,Opera 8+</li>
                                </ul>
                            </div>
                        </section>
                        <section class="how">
                            <h2 class="cell-title">如何使用</h2>
                            <div class="cell-content">
                                <pre class="sh_javascript">
jQuery(function($){
    $.use("util-history",function(){
        // 为所有状态绑定处理函数
        $.History.bind(function( state ){
            // ...
        });

        // 为指定的状态绑定处理函数
        $.History.bind("stateName", function( state ){
            // ...
        });

        // 跳转到指定的状态
        $.History.go("stateName");

    });
});</pre>
                            </div>
                        </section>
                        <section class="demo">
                            <div class="cell-content">
                                <a class="btn btn-large btn-danger" href="http://wd.alibaba-inc.com/fdevlib/examples/fdev4/jQuery.util.history.html" title="演示demo">demo</a>
                            </div>
                        </section>
                        
                        <section class="method">
                            <h2 class="cell-title">方法</h2>
                            <div class="cell-content">
                                <dl>
                                    <dt>bind(state, handler)</dt>
                                    <dd>
                                        <ul>
                                            <li><strong>state:</strong>String 状态名称</li>
                                            <li><strong>handler:</strong>Function 处理函数</li>
                                        </ul>
                                        <p>为一个指定的状态绑定一个处理函数，当页面切换到该状态时，触发该函数。
                                        若不指定状态，则绑定为所有状态所共有的处理函数。</p>
                                    </dd>
                                    <dt>go(to)</dt>
                                    <dd>
                                        <ul>
                                            <li><strong>to:</strong>String 状态名称</li>
                                        </ul>
                                        <p>跳转到指定的状态</p>
                                    </dd>
                                </dl>
                            </div>
                        </section>
                    </div>
                  </article>